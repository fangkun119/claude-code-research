软件工程的未来：Cognition 的 Russell Kaplan
在编程领域, 第一个流行的助手其实是代码协作者, 当你编写代码时, 实时获取建议, 关于代码应该如何呈现, 如何更易读, 如何完成代码, 如今我们站在AI代理时代的门槛, 这些将成为真正的, 你将任务委派, 然后代理会去执行, 我认为这意味着编程数学能力, 具有形式化验证能力的领域将持续爆发式发展, 欢迎来到Yes的演讲环节, 我是马克·阿金蒂, 我是戈曼·萨克斯公司的首席信息官, 今天我很荣幸与我的朋友罗素·卡普兰同台, 他是认知科技的总裁, 一家人工智能初创公司, 最著名的是开发了德文, 正如我们常说的, 首个AI软件工程师, 欢迎光临，很高兴见到你, 非常感谢邀请，关于你的经历, 你的个人经历, 加入认知科技之前, 你在其他AI公司工作过, 你在Skai公司任职, 听说他们收购了你的计算机视觉公司, 海亚, 海亚很好, 你也曾在Test公司工作, 没错, 是的, 在开发自动驾驶系统, 在计算机视觉领域的自动驾驶堆栈, 很好, 如今这并不令人意外, 但认知科技在三月达成40亿美元估值, 相比去年的20亿美元, 更不用提前一年的零估值, 没错, 是的, 我们, 我们成立于2024年1月, 我们的成长历程发展迅速, 太棒了, 很高兴你来到这里, 请介绍一下认知科技的核心方向, 但是我们, 你们真正为行业解决的问题到底是什么, 同时也要为像js这样的客户考虑, 所以当我们开始认知研究, 最初是以纯研究实验室的形式启动的, 我们专注于一个核心问题, 那就是软件工程的未来会是什么样子, 创始团队的许多成员都来自编程竞赛圈, 这有点像编程界的奥林匹克, 每年各国会派出四名选手, 并在这些竞赛中角逐, 我们创始团队的许多成员曾是美国金牌得主, 大家聚在一起探索, 好的, 我们该如何, 真正解决软件工程问题, 随着研究深入, 我们意识到可以构建自主编码代理, 是的, 并非简单的聊天机器人系统, 而是真正的端到端代理, 能够委托完整工作单元并返回最终结果, 不仅仅是代码, 而是经过测试的代码, 经过迭代优化的代码, 现已准备好投入生产系统, 这就是我们去年三月发布的成果, 我认为过去六个月里, 可能已经, 让我对AI能力的预期, 超过了过去两年所见, 因为至少在接近实际应用并产生实质性影响方面, 曾有一段时间从问答切换到, 我需要提供更多信息, AI开始真正为你执行任务才是质的飞跃, 这也是触发我们对话的原因, 最终促使我们选择彼此合作, 如何向潜在客户解释, 或今天正在关注我们的人, 助手与代理的区别, 助手更像是, 如今非常流行的AI工具, 我们熟知且喜爱的, 例如, Chu bt, 你有一个聊天机器人, 进行实时交互, 并获得即时响应, 这非常实用, 令人惊叹的是助手已取得的进展, 编码领域, 最早的流行助手实际上是代码协作者, 所以在你编写代码时, 实时获取建议, 关于代码应该如何呈现, 如何更易读, 如何完成代码, 现在我们站在AI代理时代的边缘, 这些真正成为, 你正在分配任务, 然后代理会去执行, 可能需要几十分钟甚至几小时, 这是全新的范式, 异步而非同步, 但返回的结果复杂度, 大幅提升, 更加丰富, 潜在价值更高, 你确实经常使用这类工具, 嗯, 我必须说我自己写了更多代码, 大概在过去的三个月里, 相比过去十五年, 其中大部分代码我都没写, 例如, 我有个录音室, 有时工程师会来, 需要使用设备, 我在周末完成的, 我直接让Devin搭建工作室, AI和我共同规划, 这个需要独立网站, 有专属网址, 自带知识库, 我想用持续集成部署, 需要部署Traversal, 提交代码后自动触发, 所有需要我手动处理的, 可能需要一个月时间, 实际上这过程, 我统计过自己的时间, 仅用了, 可能周末十小时, 效果令人惊叹, 曾要求添加模型选择器, 不知为何, Devin最终在网站添加了炫耀性标语, 当他添加模型选择器时, 选择模型后, 我注意到它会自动将那里的字符串改为由模型提供支持, 你选择的那个, 这确实是一个细微差别, 但我可能忘记了开发者可能轻易忽略这一点, 因为其中一个原本是静态字符串, 就像几乎像版权声明, 这些细微差别让我感到惊叹, 这不仅仅是一套后台规则, 更像一个专家系统, 一路到底, 这确实具备一定的思考能力, 有时它会做一些并非最快捷, 达成目标的可能方式, 但会做一些看似多余的事, 但从整体用户体验来看非常出色, 这就是我的使用体验, 我觉得这太棒了, 嗯, 听起来很有趣, 想听听你对该项目技术栈的高层次规划, 因为在很多方面这正是软件工程的发展方向, 即每位工程师逐渐成为AI代理团队的技术负责人, 你可能需要制定一个高层次的架构愿景, 这就是我希望项目如何架构, 但大量执行细节可以委派给AI处理, 而这正是我们在这个AI代理时代, 观察到与成功高度相关的技能, 将复杂项目拆解并分配给AI代理执行的能力, 如何有效引导, 让开发者像, 不要出现回退, 并保持在正确轨道上, 如何约束这种力量与智能, 是的, 这正是我们这类人, 构建自主代理的核心问题, 如何让它们在更长时间内保持正确轨道, 处理越来越复杂的任务单元, 如果任务过于简单, 如果任务非常简单, 或许异步启动代理并继续其他操作, 去做其他事情, 可能不是最佳选择, 我们可以, 我们之后再讨论这个, 我们公司最近一周非常忙碌, 上周我们收购了名为Windsurf的公司, 该公司开发了首个代理系统, 这种体验在整个创作过程中更注重人类参与, 这正是我们为这类任务设计的理想体验, 所以是吗, 这是否意味着你们正在逐渐失去一些差异化优势, 如何在坚守自身使命的同时保持初心, 我们思考的方式是希望构建软件工程的未来, 而软件工程最重要的部分之一就是为任务选择合适的工具, 如今人工智能已发展到能够实现自主代理的程度, 我们可以拥有德文, 嗯, 对于某些类型的工作, 正如你刚才描述的那样, 我也听过其他人这样描述, 可以把德文想象成一支初级工程师的队伍, 它们仍需要一定引导, 它们仍需要指导, 它们仍需要明确范围, 存在一类技术问题, 可以分解为这支AI初级工程师的队伍来处理, 但也有一类问题在能力上我们尚未达到, 随着机器学习的持续进步, 我相信我们终将实现, 但在过渡阶段我们需要提供市场上最完善的解决方案, 对于构建系统的工程师而言, 有时必须追求高杠杆效应, 有时必须深入细节, 你们主要聚焦于哪种方向, 你知道的, 面向代码创作者群体, 还是正在向企业级方向成熟发展, 请谈谈你们如何平衡这一点, 你知道的, 公司在成长方向上的战略, 是的, 当认知科技初创时, 我们作为初创公司做出了非常规选择，优先与大企业合作, 因为我们发现在一个现有代码库中编写代码的工程问题更为复杂, 比从零构建系统要困难得多, 所以, 在像高盛这样的机构, 那里, 有大量的代码, 专有框架, 专有编程语言, 这是我们真正深入研究的研究问题, 作为公司我们主要致力于, 主要聚焦于企业领域, 同时, 软件工程的未来可能涉及更多人参与开发, 而非当前状况, 过去曾是, 你需要掌握如何编写代码这类晦涩技能, 非常具体的语法, 非常特定的技术, 我们看到未来将有比今天多得多的软件工程师, 但工作的性质已经发生了变化, 它是如何改变的, 我想这看起来像, 其实可能简要回顾一下软件工程的历史, 你知道我们一直在, 我们一直在尝试与计算机交互并告诉它该做什么, 我认为1890年人口普查是首次使用穿孔卡片, 它按时且在预算内完成, 因为这些, 因为穿孔卡片, 作为首次大规模数据收集机制, 随后我们有了1947年的汇编语言和后来的COBOL, 软件工程的整个历史是更高层次的抽象, 但核心目标仍是告诉计算机, 你想要它做什么, 我们认为软件工程的未来是每个人都能告诉计算机自己想要做什么, 因此我们仍然专注于与软件工程师和技术相关职能合作, 正如你所知, 今天的AI系统并不完美, 当它们达到解决方案的80%或90%时, 你需要能够介入提供最后10%的反馈, 但随着它们的进步, 越来越多的人获得赋能, 我给你一个有趣的轶事, 我们以软件工程师身份构建了Devon, 但我们的运维负责人发现她能用Devon订午餐, 通过DoorDash进行餐饮配送, 因为Devon能制定长期计划, 它具备浏览器功能, 它有密钥管理系统处理信用卡, 于是我们收到了大量Devon的DoorDash订单, 我们四处查看是谁在操作, 我们的运维负责人（不会编程）说, 哦对啊, 就是我, 这就是Devon, 她还有工作吗, 她有, 事实上她的工作效率可能比我预期的高三倍, 作为运维负责人, 部分得益于这些工具, 所以你看到Devon正在超越软件工程领域吗, 如果能解决软件工程问题, 还能做更多事情, 一种思考方式是：要真正解决软件工程需要什么, 不仅仅是编写代码, 是的, 对, 我的意思是, 你已经说过类似的话了, 软件工程师工作中有多少比例是编写代码, 可能不到一半, 应该还有你计划的部分, 还有你与同事的互动方式, 还有你决定构建什么内容, 然后当你编写代码时, 你需要测试并运行代码, 我想存在一个世界, 嗯, 这些基础能力在许多其他领域都非常有用, 但通过代码，或者你也认为最终, 只是逻辑, 以不同形式的过程, 例如, 它可以是政策, 它可以是驱动某些行动并被执行的实体, 在你看来，目前主要的成果物还是代码对吗, 成果物主要是代码, 但要实现这些系统能力并不完全依赖代码, 随着我们构建更复杂的系统, 并不断提升推理能力, 可以想象代码加上计算机使用, 代码结合组织文档和文档的推理变得越来越重要, 我注意到德文的能力在提升, 与新模型发布同步且迅速, 所以, 当Claude 4发布时, 就像之后的效果, 我觉得德文变得更聪明了, 请谈谈你与模型供应商的关系, 如何保持同步, 你知道的, 就像汽车的动力系统, 是的, 我们正处于技术加速的最伟大浪潮之一, 随着这些模型显著提升, 你知道的, 每隔几个月, 每年, 最近有独立实验室的研究表明, AI代理能力每七个月翻一番, 意味着可由AI处理的任务复杂度, 人类完成该任务所需时间, 代理现在能完成的时间每七个月翻倍, 若延续这一趋势将远超摩尔定律, 这对德文至关重要的是底层模型能力的提升, 同时我们也发现这些模型, 你知道它们最初其实是这样建造的, 就像这些, 这些文本补全引擎, 你知道的, 基于整个互联网训练, 推断下一个单词，这是这些模型训练的核心, 而我们现在要做的任务, 完全不同, 是完成真实世界的项目, 完成工作单元, 所以我们也在内部进行大量研究, 如何构建最佳代理, 其中一些模型非常有用, 输入惊人, 我觉得, 或许在结束前我再问你一个问题, 也就是, 让你预测未来一点, 显然在这个时候这可能是最难的, 你看到什么即将到来, 如果你想象一下, 我们知道接下来在GS的演讲, 可能在六个月或一年后, 你认为目前有哪些东西正在地平线上, 是的, 嗯, 你知道的, 我开始研究认知的原因之一是在Scale工作时, 我们负责所有基础模型实验室的数据管道, 每个新模型发布都需要几个月时间, 依赖输入到这些模型中的数据, 逐渐变得明显的是这些模型在各方面都更强大, 尤其是在特定领域, 能够自动验证工作质量, 这也是代码领域快速发展的原因, 你可以编写代码, 然后让计算机运行代码, 并观察, 是否编译成功, 是否通过, 测试是否失败, 因此预测未来十二个月, 需要思考哪些领域, 以及我们已建立的基础设施, 能够实现自动验证循环, 对于机器学习而言, 在场的研究人员可以用于强化学习更快提升, 因此我认为这意味着, 数学和编码能力, 具备形式化可验证性的领域将持续爆发式发展, 我的意思是，我们的研究目标是在接下来的十二个月内让德文晋升为高级工程师, 你认为最大的制约因素会是什么, 以前数据是主要瓶颈, 但现在大家都很擅长合成数据了, 你认为真正的瓶颈在哪里, 我认为真正的瓶颈其实是算力, 美国的能源生产速度远跟不上需求, 我觉得我们可能面临非常严重的瓶颈, 可能不在接下来的十二个月内, 虽然已经开始显现了, 可能在未来的两年内, 因为这些系统需要巨大的计算资源, 非常耗能, 并且具有这样的特性：投入的计算资源越多, 它们的能力就越强, 所以我认为, 如果观察趋势, 社会对计算资源的需求曲线, 与可用能源的供给情况, 在支撑这些计算资源时我们即将遇到, 你知道的, 可能不在接下来的十二个月内, 但不久后我们可能会遇到严重瓶颈, 意思是周四, 嗯, 罗素, 感谢你们的参与, 并祝贺你, 你知道的, 你辉煌的职业生涯, 所以非常感谢,